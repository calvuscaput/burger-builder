{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.sass","components/Order/CheckoutSummary/CheckoutSummary.module.sass","containers/Checkout/ContactData/ContactData.module.sass","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_sass__WEBPACK_IMPORTED_MODULE_1__","_Input_module_sass__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","validationError","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","a","createElement","className","ValidationError","valueType","elementType","Object","assign","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Label","htmlFor","label","module","exports","Input","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCanceled","checkoutContinued","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","setState","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCanceledHandler","history","goBack","checkoutContinuedHandler","replace","summary","Redirect","to","purchasedRedirect","purchased","Route","path","match","component"],"mappings":"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","file":"static/js/1.fefe19b7.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Input.module.sass';\n\nconst input = (props) => {\n  let inputElement = null;\n  let validationError = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n    validationError = <p className={classes.ValidationError}>Please enter a valid {props.valueType}!</p>;\n  } \n\n  switch (props.elementType) {\n    case ('input'):\n      inputElement = <input \n        className={inputClasses.join(' ')}\n        {...props.elementConfig} \n        value={props.value}\n        onChange={props.changed}/>;\n      break;\n    case ('textarea'):\n      inputElement = <textarea\n        className={inputClasses.join(' ')} \n        {...props.elementConfig} \n        value={props.value}\n        onChange={props.changed}/>;\n      break;\n      case ('select'):\n      inputElement = (\n      <select\n        className={inputClasses.join(' ')} \n        value={props.value}\n        onChange={props.changed}> \n        {props.elementConfig.options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.displayValue}\n          </option>\n        ))}\n        </select>);\n      break;\n    default:\n      inputElement = <input \n        className={inputClasses.join(' ')} \n        {...props.elementConfig} \n        value={props.value}\n        onChange={props.changed}/>;\n  }\n\n  return (\n    <div className={classes.inputElement}>\n      <label className={classes.Label} htmlFor=\"\">{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  )\n}\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1d5Yo\",\"Label\":\"Input_Label__1CxFT\",\"InputElement\":\"Input_InputElement__22RFt\",\"Invalid\":\"Input_Invalid__1MMvk\",\"ValidationError\":\"Input_ValidationError__2oEXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1OqZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__24unx\"};","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.sass'\n\nconst checkoutSummary = (props) => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div style={{width: '100%', margin: 'auto'}}>\n        <Burger ingredients={props.ingredients}/>\n      </div>\n      <Button\n      btnType=\"Danger\"\n      clicked={props.checkoutCanceled}>CANCEL</Button>\n      <Button\n      btnType=\"Success\"\n      clicked={props.checkoutContinued}>CONTINUE</Button>\n    </div>\n  );\n}\n\nexport default checkoutSummary;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.sass'\nimport axios from '../../../axois-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/widthErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nclass ContactData extends Component {\n\n  state = {\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Street'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'ZIP Code'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 6,\n          isNumeric: true\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Country'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your E-Mail'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: 'select',\n        elementConfig: {\n          options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            },\n            {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }\n          ]\n        },\n        value: 'fastest',\n        validation: {},\n        valid: true\n      }\n    },\n    formIsValid: false\n  }\n\n  orderHandler = (event) => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData,\n      userId: this.props.userId\n    }\n    this.props.onOrderBurger(order, this.props.token)\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n      value: event.target.value,\n      valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\n      touched: true\n    });\n    const updatedOrderForm = updateObject(this.state.orderForm, {\n      [inputIdentifier]: updatedFormElement\n    })    \n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n    }\n\n    this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n  }\n\n  render() {\n\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      })\n    }\n\n    let form =(\n      <form onSubmit={this.orderHandler}>\n          {formElementsArray.map(formElement => (\n            <Input \n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              value={formElement.config.value}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              touched={formElement.config.touched}\n              valueType={formElement.id}\n              changed={(event, ) => this.inputChangedHandler(event, formElement.id)}/>\n          ))}\n          <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n        </form>\n    );\n    if (this.props.loading) {\n      form= <Spinner />\n    }\n\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n  \n\n  checkoutCanceledHandler = () => {\n    this.props.history.goBack()\n  }\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace('/checkout/contact-data')\n  }\n  \n  render () {\n\n    let summary =  <Redirect to=\"/\" />\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n      summary = \n      <div>\n        {purchasedRedirect}\n        <CheckoutSummary \n        ingredients={this.props.ings}\n        checkoutCanceled={this.checkoutCanceledHandler}\n        checkoutContinued={this.checkoutContinuedHandler}/>\n       <Route path={this.props.match.path + '/contact-data'}\n        component={ContactData}/>\n      </div>\n      \n    }\n    return summary\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\n\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}